FROM ubuntu:20.04 AS base

ARG C_COMPILER=gcc
ARG CXX_COMPILER=g++
ARG COMPILER_VERSION=10
ARG BUILD_TYPE=Release

# Setup Build tools
RUN apt-get update -qq && export DEBIAN_FRONTEND=noninteractive && \
    apt-get install -y --no-install-recommends \
    make cmake ninja-build \
    python3.8 python3-pip \
    ${C_COMPILER}-${COMPILER_VERSION} \
    ${CXX_COMPILER}-${COMPILER_VERSION}

ENV CC=${C_COMPILER}-${COMPILER_VERSION}
ENV CXX=${CXX_COMPILER}-${COMPILER_VERSION}

# Setup Conan
RUN python3 -m pip install --upgrade pip setuptools && \
    python3 -m pip install conan && \
    conan profile new default --detect && \
    conan profile update settings.compiler=${C_COMPILER} default && \
    conan profile update settings.compiler.version=${COMPILER_VERSION} default && \
    conan profile update settings.compiler.libcxx=libstdc++11 default

ENV CONAN_SYSREQUIRES_SUDO 0
ENV CONAN_SYSREQUIRES_MODE enabled

WORKDIR /docker_cpp

# Install Conan packages
COPY /conanfile.txt conanfile.txt
RUN  conan install . \
    --install-folder build/${BUILD_TYPE}/modules \
    --settings build_type=${BUILD_TYPE} \
    --settings compiler=${C_COMPILER} \
    --settings compiler.version=${COMPILER_VERSION} \
    --build missing

# Copy source code
COPY . .

FROM base AS test

# CMake Configure
RUN cmake -G Ninja \
    -D CMAKE_BUILD_TYPE=${BUILD_TYPE} \
    -D UNIT_TESTS=ON \
    -B ./build/${BUILD_TYPE} \
    -S .

# CMake Build
RUN cmake --build ./build/${BUILD_TYPE} --config ${BUILD_TYPE}

# CTest Run
RUN ctest .
