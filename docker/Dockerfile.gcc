FROM ubuntu:20.04 as base
RUN apt update -y && \
    apt install -y --no-install-recommends \
    make \
    cmake \
    ninja-build \
    python3.8 \
    pip \
    gcc-9 \
    g++-9 && \
    pip install conan

ENV CC=gcc-9
ENV CXX=g++-9
ENV BUILD_TYPE=Release
COPY . /docker_cpp/

FROM base as build
WORKDIR /docker_cpp/build
RUN cmake -G Ninja -D CMAKE_BUILD_TYPE=${BUILD_TYPE} -D UNIT_TEST=OFF .. && \
    cmake --build . --config ${BUILD_TYPE}

FROM build as test
WORKDIR /docker_cpp/build
RUN cmake -G Ninja -D CMAKE_BUILD_TYPE=${BUILD_TYPE} -D UNIT_TEST=ON .. && \
    cmake --build . --config ${BUILD_TYPE}
ENTRYPOINT [ "ctest" ]

# FROM ubuntu:20.04 as final
FROM scratch as final
COPY --from=build /docker_cpp/build/bin/ /docker_cpp/bin/
COPY --from=build /docker_cpp/build/lib/ /docker_cpp/lib/

COPY --from=build /lib/x86_64-linux-gnu/libpthread.so.0 /lib/x86_64-linux-gnu/libpthread.so.0
COPY --from=build /lib/x86_64-linux-gnu/libstdc++.so.6 /lib/x86_64-linux-gnu/libstdc++.so.6
COPY --from=build /lib/x86_64-linux-gnu/libgcc_s.so.1 /lib/x86_64-linux-gnu/libgcc_s.so.1
COPY --from=build /lib/x86_64-linux-gnu/libc.so.6 /lib/x86_64-linux-gnu/libc.so.6
COPY --from=build /lib64/ld-linux-x86-64.so.2 /lib64/ld-linux-x86-64.so.2
COPY --from=build /lib/x86_64-linux-gnu/libm.so.6 /lib/x86_64-linux-gnu/libm.so.6

CMD [ "./docker_cpp/bin/app" ]
